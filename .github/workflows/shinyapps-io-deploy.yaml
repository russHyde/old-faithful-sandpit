on:
  # Trigger the deployment workflow on push (to main branch) or when a pull request (against the
  # main branch) is updated
  #
  # (If triggered on push in a non-main branch that is a PR against the main branch, then the
  # workflow would attempt to deploy a branch-specific app to the same shinyapps.io endpoint twice)
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: shinyapps-deploy

jobs:
  shinyapps-deploy:
    runs-on: ubuntu-20.04

    env:
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/focal/latest
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      APP_BASENAME: my-app
      SHINYAPPS_IO_TOKEN: ${{ secrets.SHINYAPPS_IO_TOKEN }}
      SHINYAPPS_IO_SECRET: ${{ secrets.SHINYAPPS_IO_SECRET }}
      SHINYAPPS_IO_ACCOUNT: ${{ secrets.SHINYAPPS_IO_ACCOUNT }}
      COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
      SCRIPT: ".github/scripts/deploy-shinyapps-io.R"

    steps:
      - name: Checkout Project
        uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev
          sudo apt-get install -y libgdal-dev
          sudo apt-get install -y libudunits2-dev
          sudo apt-get install -y libmagick++-dev

      - uses: r-lib/actions/setup-r@v1
        id: install-r

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install R deployment dependencies
        run: |
          options(warn = 2)
          source("${{ env.SCRIPT }}")
          install_script_deps()
        shell: Rscript {0}

      - name: Install R runtime dependencies
        run: |
          options(warn = 2)
          install.packages('remotes')
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Put run-required secrets into .Renviron
        run: |
          echo "API_KEY=${{ secrets.NOT_MY_API_KEY }}" >> .Renviron

      - name: Deploy the app for this branch
        run: |
          options(warn = 2)
          source("${{ env.SCRIPT }}")
          deploy(account = "${{ env.SHINYAPPS_IO_ACCOUNT }}")
        shell: Rscript {0}
